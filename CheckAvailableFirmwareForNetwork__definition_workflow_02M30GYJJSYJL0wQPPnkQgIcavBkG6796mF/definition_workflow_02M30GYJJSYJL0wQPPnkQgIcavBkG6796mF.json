{
  "workflow": {
    "unique_name": "definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF",
    "name": "Check Available Firmware for Network",
    "title": "Check Available Firmware for Network",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Output - Appliance - Available Firmware Versions",
          "type": "datatype.string",
          "description": "Appliance available firmware versions",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "json"
        },
        "unique_name": "variable_workflow_02M3MYCAE4Z471oBd6zU3dI7HlwvXsNtZ4q",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Output - Switch - Available Firmware Versions",
          "type": "datatype.string",
          "description": "Switch available firmware versions",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "json"
        },
        "unique_name": "variable_workflow_02M3MZ49LWOK23aGQRbYOcYcm8ivPEZ2mVf",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Input - Network Name",
          "type": "datatype.string",
          "description": "The Name of the Meraki Network",
          "is_required": true,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M30H9ZWVYG97Ddcta3xu7rrVUZsl8ifwq",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Output - Wireless - Current Version",
          "type": "datatype.string",
          "description": "Wireless current firmware version",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M3MZEFROAQL7kpDMAgvAu62wWwqTwJmqJ",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Input - Organization ID or Name",
          "type": "datatype.string",
          "description": "The Meraki Organization ID or Organization Name.",
          "is_required": true,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M30IM5VO2AS4WKLy2VYN1plX7frJeH1qw",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "Organization ID",
          "type": "datatype.string",
          "description": "Meraki Organization ID",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M6H1GEN4C263m1V94LPMCQNjGf0OG5ZG2",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Output - Switch - Current Version",
          "type": "datatype.string",
          "description": "Switch current firmware version",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M3MYR7I3LS64vFgpXcAidxLtVMy50gOdZ",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Output - Appliance - Current Version",
          "type": "datatype.string",
          "description": "Appliance current firmware version",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M3MVNE15DQQ3GM2uGQAx8zHoAAIsYmtPY",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Output - Wireless - Available Firmware Versions",
          "type": "datatype.string",
          "description": "Wireless available firmware versions",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "json"
        },
        "unique_name": "variable_workflow_02M3MZOEXMFJN34Sue1HxX2IRzkVMmDXuMz",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Output - Result",
          "type": "datatype.string",
          "description": "Result message with the current and available firmware versions for Appliance, Switch, and Wireless devices.",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": "text"
        },
        "unique_name": "variable_workflow_02M6KC1YUN2E21oTPUAWTuiigLqni8IaiMR",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "is_atomic": false
      },
      "automation_rules": {
        "type": [
          "approval_task.rule_event"
        ]
      },
      "delete_workflow_instance": false,
      "description": "This workflow requires a Meraki Network Name and either a Meraki Organization ID or Meraki Organization Name as input.  The workflow returns JSON objects for the current and available firmware versions for Appliance, Switch and Wireless devices on the Network.",
      "display_name": "Check Available Firmware for Network",
      "runtime_user": {
        "target_default": true
      },
      "target": {
        "target_type": "meraki.endpoint",
        "specify_on_workflow_start": true
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_02MGBB1XV74T14vch1JymK78sjVAG8XLMPg",
        "name": "Get Organization By Name",
        "title": "Get Organization By Name",
        "type": "workflow.sub_workflow",
        "base_type": "subworkflow",
        "properties": {
          "continue_on_failure": true,
          "description": "This sub-workflow will return the Meraki Organization ID when given a Meraki Organization Name and the selected Meraki Target has the API Key with permissions on that Meraki Organization.\nNOTE: The Continue workflow execution of failure option is selected below.  This is for cases where a Organization ID is provided as input.",
          "display_name": "Get Organization By Name",
          "input": {
            "variable_workflow_02M605GTHU5L72i8goD4nuYixYOvQEFV7rN": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.input.variable_workflow_02M30IM5VO2AS4WKLy2VYN1plX7frJeH1qw$",
            "variable_workflow_02M605GTI1LUG737lDLyzxnE9jwENJNQ08W": false
          },
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "target_type": "meraki.endpoint",
            "use_workflow_target": true
          },
          "workflow_id": "definition_workflow_02M605GS81XN44qr4RBWrJ6Zazk7k0ArIYX",
          "workflow_name": "Meraki - Get Organization By Name"
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02M6GWLTHB0QQ2tHfY1ZO36K4S9uzgqt7gD",
        "name": "Condition Block",
        "title": "Was Org Name provided as input?",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "conditions": [],
          "continue_on_failure": false,
          "description": "This conditional checks if the Meraki Organization Name was provided as input by checking the result of the Get Organization By Name Activity Status Code",
          "display_name": "Was Org Name provided as input?",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_02M6GWLTN539K1dlKUmeNaU8S93S4tVs7gp",
            "name": "Condition Branch",
            "title": "Yes, Set ID from Get",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_02MGBB1XV74T14vch1JymK78sjVAG8XLMPg.output.variable_workflow_02M605GTHEWOW4TGG1xjMEivKqrrMbc2hM3$",
                "operator": "eq",
                "right_operand": 200
              },
              "continue_on_failure": false,
              "description": "Check that the Status Code of the Get Organizations By Name sub-workflow is 200, indicating success.   This indicates that a valid Meraki Organization Name was provided as input.",
              "display_name": "Yes, Set ID from Get",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_02M6H1KCDK4CL6WPslndUEMP25csS3zZZkL",
                "name": "Set Variables",
                "title": "Set Local Org ID",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "description": "Set the local workflow variable for the Meraki Organization ID",
                  "display_name": "Set Local Org ID",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.local.variable_workflow_02M6H1GEN4C263m1V94LPMCQNjGf0OG5ZG2$",
                      "variable_value_new": "$activity.definition_activity_02MGBB1XV74T14vch1JymK78sjVAG8XLMPg.output.variable_workflow_02M605GTJITQP1fcLQlR8CLYAHoMomGWZvE$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          },
          {
            "unique_name": "definition_activity_02M6H2KH6P4Q56cig9mkjsWMHaANAfb03Z8",
            "name": "Condition Branch",
            "title": "No, Set ID from Input",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_02MGBB1XV74T14vch1JymK78sjVAG8XLMPg.output.variable_workflow_02M605GTHEWOW4TGG1xjMEivKqrrMbc2hM3$",
                "operator": "ne",
                "right_operand": 200
              },
              "continue_on_failure": false,
              "description": "Check that the Status Code of the Get Organizations By Name sub-workflow is not 200, indicating the sub-workflow failed to find the Organization Name.  This indicates that a Meraki Organization ID was provided as input.",
              "display_name": "No, Set ID from Input",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_02M6H2LYL9JDM1hNqkdynS5BTrc5sKm6G8G",
                "name": "Set Variables",
                "title": "Set Local Org ID",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "description": "Set the local workflow variable for the Meraki Organization ID",
                  "display_name": "Set Local Org ID",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.local.variable_workflow_02M6H1GEN4C263m1V94LPMCQNjGf0OG5ZG2$",
                      "variable_value_new": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.input.variable_workflow_02M30IM5VO2AS4WKLy2VYN1plX7frJeH1qw$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_02M30HGB4LNA03KaCfBjUVYxuyHAOiEq2IB",
        "name": "Get Network By Name",
        "title": "Get Network By Name",
        "type": "workflow.sub_workflow",
        "base_type": "subworkflow",
        "properties": {
          "continue_on_failure": false,
          "description": "This sub-workflow will return the Meraki Network ID when given a Meraki Organization ID and a Meraki Network Name and the selected Meraki Target has the API Key with permissions on that Meraki Organization.",
          "display_name": "Get Network By Name",
          "input": {
            "variable_workflow_02LCRACABYWD40LVa27k00YndGuostARjdp": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.local.variable_workflow_02M6H1GEN4C263m1V94LPMCQNjGf0OG5ZG2$",
            "variable_workflow_02LCRAQ5WICDM3PgxFwKyi19yaeu1bTpVUx": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.input.variable_workflow_02M30H9ZWVYG97Ddcta3xu7rrVUZsl8ifwq$",
            "variable_workflow_02LEUF5N782ES5q1O7K4p1AoMBPrkkcxi1E": false
          },
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "target_type": "meraki.endpoint",
            "use_workflow_target": true
          },
          "workflow_id": "definition_workflow_02LCR4UKH38PM6zDR4Bx2b2J165gCF1mhvh",
          "workflow_name": "Meraki - Get Network By Name"
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02MGBHTE6I3GX3DjiCchzbnQ27TYv3mNIjt",
        "name": "Get Network Firmware Upgrades",
        "title": "Get Network Firmware Upgrades",
        "type": "workflow.atomic_workflow",
        "base_type": "subworkflow",
        "properties": {
          "continue_on_failure": false,
          "description": "This Atomic action will return the current and available firmware versions for the provided Meraki Network ID when the selected Meraki Target has the API Key with permissions on that Meraki Organization.",
          "display_name": "Get Network Firmware Upgrades",
          "input": {
            "variable_workflow_02LV1H3CNM5T45adfzDFwEeMjrKbmdHd58D": "$activity.definition_activity_02M30HGB4LNA03KaCfBjUVYxuyHAOiEq2IB.output.variable_workflow_02LCRLPN6EZY51pb3GRpQG7QdKWS452YyuL$"
          },
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "target_type": "meraki.endpoint",
            "use_workflow_target": true
          },
          "workflow_id": "definition_workflow_02LV1H3CNM49K1df7J02ad4wyV6Jv0E23b6",
          "workflow_name": "Meraki - Get Network Firmware Upgrades"
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02M3IVKIZS08U0H7qiGNWAtzvz7OkVBAI0p",
        "name": "JSONPath Query",
        "title": "Parse JSON Output",
        "type": "corejava.jsonpathquery",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "description": "Parse the output of the preceding Get Network Firmware Upgrades action and return the following items:\napplianceCurrVersionId\napplianceCurrVersionShortName\napplianceDetails\nswitchCurrVersionId\nswitchCurrVersionShortName\nswitchDetails\nwirelessCurrVersionId\nwirelessCurrVersionShortName\nwirelessDetails\n\n",
          "display_name": "Parse JSON Output",
          "input_json": "$activity.definition_activity_02MGBHTE6I3GX3DjiCchzbnQ27TYv3mNIjt.output.variable_workflow_02LV1H3CNMB7K2eIEUcLniuSFXAmkGIOQJ2$",
          "jsonpath_queries": [
            {
              "jsonpath_query": ".products.appliance.currentVersion.id",
              "jsonpath_query_name": "applianceCurrVersionId",
              "jsonpath_query_type": "string",
              "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
            },
            {
              "jsonpath_query": ".products.appliance.currentVersion.shortName",
              "jsonpath_query_name": "applianceCurrVersionShortName",
              "jsonpath_query_type": "string",
              "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
            },
            {
              "jsonpath_query": ".products.appliance",
              "jsonpath_query_name": "applianceDetails",
              "jsonpath_query_type": "string",
              "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
            },
            {
              "jsonpath_query": ".products.switch.currentVersion.id",
              "jsonpath_query_name": "switchCurrVersionId",
              "jsonpath_query_type": "string",
              "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
            },
            {
              "jsonpath_query": ".products.switch.currentVersion.shortName",
              "jsonpath_query_name": "switchCurrVersionShortName",
              "jsonpath_query_type": "string",
              "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
            },
            {
              "jsonpath_query": ".products.switch",
              "jsonpath_query_name": "switchDetails",
              "jsonpath_query_type": "string",
              "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
            },
            {
              "jsonpath_query": ".products.wireless.currentVersion.id",
              "jsonpath_query_name": "wirelessCurrVersionId",
              "jsonpath_query_type": "string",
              "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
            },
            {
              "jsonpath_query": ".products.wireless.currentVersion.shortName",
              "jsonpath_query_name": "wirelessCurrVersionShortName",
              "jsonpath_query_type": "string",
              "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
            },
            {
              "jsonpath_query": ".products.wireless",
              "jsonpath_query_name": "wirelessDetails",
              "jsonpath_query_type": "string",
              "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
            }
          ],
          "skip_execution": false,
          "skip_path": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02M3J5QYN9IQR5PcWCx4uv47zJMWbpGUP2P",
        "name": "Execute Python Script",
        "title": "Identify Available Versions",
        "type": "python3.script",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "description": "This custom Python action checks if the current version is already the latest. \nThis is done by removing the current version from the list of available versions list. This will leave it as [] or with additional versions.\nThis action has 3 inputs, the appliance, switch, and wireless details from the preceding JSON Path Query.  It will return 3 outputs, the updated available firmware versions list for appliance, switch, and wireless devices.\n",
          "display_name": "Identify Available Versions",
          "script": "import sys\nimport json\n\n####################\n# This section establishes some inputs and local variables we need for later\n####################\n\n# Note when you have one item as input you need extra comma - its not a mistake\n(mxDetails,msDetails,mrDetails) = sys.argv[1:4]\n\ndef remove_current_version_and_attributes(json_data):\n    \"\"\"\n    Removes the current version from the list of available versions and\n    excludes 'releaseDate' and 'firmware' attributes from the output JSON.\n\n    Parameters:\n    json_data (str): The JSON data as a string.\n\n    Returns:\n    str: The updated JSON data as a string.\n    \"\"\"\n    # Parse the JSON string into a Python dictionary\n    data = json.loads(json_data)\n\n    # Find the current version ID\n    current_version_id = data['currentVersion']['id']\n\n    # Original JSON string\n    empty_json_string = '{ \"availableVersions\": [] }'\n\n    # Remove the current version and filter out specific attributes\n    data['availableVersions'] = [\n        # iterate over each element in available version and remove extra elements\n        {key: version[key] for key in version if key not in ['releaseDate', 'firmware']}\n        for version in data['availableVersions']\n        if version['id'] != current_version_id\n    ]\n\n    # remove from final JSON\n    del data['currentVersion']\n    del data['lastUpgrade']\n    del data['nextUpgrade']\n    del data['participateInNextBetaRelease']\n\n    # Check if 'availableVersions' is an empty list\n    if not data['availableVersions']:\n        data = \"Running the latest firmware.\"\n    else:\n        # Keep the original data if not empty\n        # Return the updated JSON data as a string\n        data = json.dumps(data, indent=4)\n\n    \n    return data\n\nappliance_available_versions_json = remove_current_version_and_attributes(mxDetails)\nswitch_available_versions_json = remove_current_version_and_attributes(msDetails)\nwireless_available_versions_json = remove_current_version_and_attributes(mrDetails)\n",
          "script_arguments": [
            "$activity.definition_activity_02M3IVKIZS08U0H7qiGNWAtzvz7OkVBAI0p.output.jsonpath_queries.applianceDetails$",
            "$activity.definition_activity_02M3IVKIZS08U0H7qiGNWAtzvz7OkVBAI0p.output.jsonpath_queries.switchDetails$",
            "$activity.definition_activity_02M3IVKIZS08U0H7qiGNWAtzvz7OkVBAI0p.output.jsonpath_queries.wirelessDetails$"
          ],
          "script_queries": [
            {
              "script_query": "appliance_available_versions_json",
              "script_query_name": "appliance_available_versions_json",
              "script_query_type": "string"
            },
            {
              "script_query": "switch_available_versions_json",
              "script_query_name": "switch_available_versions_json",
              "script_query_type": "string"
            },
            {
              "script_query": "wireless_available_versions_json",
              "script_query_name": "wireless_available_versions_json",
              "script_query_type": "string"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02M3KCC16KVL679xGr1IX2USKsfHp7EFzVx",
        "name": "Set Variables",
        "title": "Set Output Variables",
        "type": "core.set_multiple_variables",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "Set the output variables",
          "display_name": "Set Output Variables",
          "skip_execution": false,
          "variables_to_update": [
            {
              "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MVNE15DQQ3GM2uGQAx8zHoAAIsYmtPY$",
              "variable_value_new": "$activity.definition_activity_02M3IVKIZS08U0H7qiGNWAtzvz7OkVBAI0p.output.jsonpath_queries.applianceCurrVersionShortName$ (ID:$activity.definition_activity_02M3IVKIZS08U0H7qiGNWAtzvz7OkVBAI0p.output.jsonpath_queries.applianceCurrVersionId$)"
            },
            {
              "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MYCAE4Z471oBd6zU3dI7HlwvXsNtZ4q$",
              "variable_value_new": "$activity.definition_activity_02M3J5QYN9IQR5PcWCx4uv47zJMWbpGUP2P.output.script_queries.appliance_available_versions_json$"
            },
            {
              "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MYR7I3LS64vFgpXcAidxLtVMy50gOdZ$",
              "variable_value_new": "$activity.definition_activity_02M3IVKIZS08U0H7qiGNWAtzvz7OkVBAI0p.output.jsonpath_queries.switchCurrVersionShortName$ (ID: $activity.definition_activity_02M3IVKIZS08U0H7qiGNWAtzvz7OkVBAI0p.output.jsonpath_queries.switchCurrVersionId$)"
            },
            {
              "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MZ49LWOK23aGQRbYOcYcm8ivPEZ2mVf$",
              "variable_value_new": "$activity.definition_activity_02M3J5QYN9IQR5PcWCx4uv47zJMWbpGUP2P.output.script_queries.switch_available_versions_json$"
            },
            {
              "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MZEFROAQL7kpDMAgvAu62wWwqTwJmqJ$",
              "variable_value_new": "$activity.definition_activity_02M3IVKIZS08U0H7qiGNWAtzvz7OkVBAI0p.output.jsonpath_queries.wirelessCurrVersionShortName$ (ID:$activity.definition_activity_02M3IVKIZS08U0H7qiGNWAtzvz7OkVBAI0p.output.jsonpath_queries.wirelessCurrVersionId$)"
            },
            {
              "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MZOEXMFJN34Sue1HxX2IRzkVMmDXuMz$",
              "variable_value_new": "$activity.definition_activity_02M3J5QYN9IQR5PcWCx4uv47zJMWbpGUP2P.output.script_queries.wireless_available_versions_json$"
            },
            {
              "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M6KC1YUN2E21oTPUAWTuiigLqni8IaiMR$",
              "variable_value_new": "Appliance Current Version:\n$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MVNE15DQQ3GM2uGQAx8zHoAAIsYmtPY$\nAppliance Available Version(s):\n$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MYCAE4Z471oBd6zU3dI7HlwvXsNtZ4q$\n----------------------------------------------------------\nSwitch Current Version:\n$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MYR7I3LS64vFgpXcAidxLtVMy50gOdZ$\nSwitch Available Version(s):\n$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MZ49LWOK23aGQRbYOcYcm8ivPEZ2mVf$\n----------------------------------------------------------\nWireless Current Version:\n$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MZEFROAQL7kpDMAgvAu62wWwqTwJmqJ$\nWireless Available Version(s):\n$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M3MZOEXMFJN34Sue1HxX2IRzkVMmDXuMz$\n----------------------------------------------------------"
            },
            {
              "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.workflow_results$",
              "variable_value_new": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.variable_workflow_02M6KC1YUN2E21oTPUAWTuiigLqni8IaiMR$"
            },
            {
              "variable_to_update": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.workflow_results_code$",
              "variable_value_new": "completed-successfully"
            }
          ]
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02M5IUAEXDRF634rK6auQF21q7gwlVpMT1B",
        "name": "Completed",
        "title": "Completed",
        "type": "logic.completed",
        "base_type": "activity",
        "properties": {
          "completion_type": "succeeded",
          "continue_on_failure": false,
          "description": "Set the Workflow Result",
          "display_name": "Completed",
          "result_message": "$workflow.definition_workflow_02M30GYJJSYJL0wQPPnkQgIcavBkG6796mF.output.workflow_results$",
          "skip_execution": false
        },
        "object_type": "definition_activity"
      }
    ],
    "categories": [
      "category_02NXV6O12LF114DhKxx98npicaIPTPJql2v"
    ]
  },
  "categories": {
    "category_02NXV6O12LF114DhKxx98npicaIPTPJql2v": {
      "unique_name": "category_02NXV6O12LF114DhKxx98npicaIPTPJql2v",
      "name": "Community Examples",
      "title": "Community Examples",
      "type": "basic.category",
      "base_type": "category",
      "description": "Example Workflows that will be made available to the Workflows Community until the Workflows Exchange in available.",
      "category_type": "system",
      "object_type": "category"
    }
  },
  "atomic_workflows": [
    "definition_workflow_02LV1H3CNM49K1df7J02ad4wyV6Jv0E23b6"
  ],
  "dependent_workflows": [
    "definition_workflow_02M605GS81XN44qr4RBWrJ6Zazk7k0ArIYX",
    "definition_workflow_02LCR4UKH38PM6zDR4Bx2b2J165gCF1mhvh",
    "definition_workflow_02LV1H3CNM49K1df7J02ad4wyV6Jv0E23b6"
  ]
}