{
  "workflow": {
    "unique_name": "definition_workflow_02OP227DVBJU72455dp96RDtVkh4RSpD7PU",
    "name": "Check AP's",
    "title": "Check AP's",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "tabletype_02OQ37X0MS07P4yhLi4GBZWnGtt2Bapsmf7",
        "properties": {
          "scope": "local",
          "name": "Serial Port 2",
          "type": "datatype.table",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": ""
        },
        "unique_name": "variable_workflow_02OQ381A32PA36sBlpj8cK20YEDvrja1aRm",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "tabletype_02OQ1CEG7RMP55pJFQGxEVHmIIsGKPEIK72",
        "properties": {
          "scope": "local",
          "name": "AP Health Check",
          "type": "datatype.table",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": ""
        },
        "unique_name": "variable_workflow_02OQ1CI3HRZPO3qm4BNyxb832v7EmFFhoz3",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "tabletype_02OQ225EDDYEA4m6efq2YnFV0XhoiDKL0DU",
        "properties": {
          "scope": "local",
          "name": "Serial Port Table",
          "type": "datatype.table",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false,
          "variable_string_format": ""
        },
        "unique_name": "variable_workflow_02OQ22B8YEKG94wecG9QGvEBvf9IQZSafMJ",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "is_atomic": false
      },
      "delete_workflow_instance": false,
      "display_name": "Check AP's",
      "runtime_user": {
        "target_default": true
      },
      "target": {
        "target_type": "meraki.endpoint",
        "target_id": "definition_target_02OASIW2D9EIK0VRpS9VyS2JSKwpbCIVXSW",
        "execute_on_workflow_target": true
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_02OP227GKX0PI4CSU4rUY5QxNTXgSMbcTII",
        "name": "Meraki - Get Organizations",
        "title": "Meraki - Get Organizations",
        "type": "workflow.atomic_workflow",
        "base_type": "subworkflow",
        "properties": {
          "description": "**Cisco Meraki - Get Organizations**\nRetrieve a list of organizations that the authenticated user has access to within their Meraki account. \nAn organization in Meraki represents a logical grouping of networks, devices, and settings that can be managed collectively.\n\n**Target:** A Meraki Endpoint using HTTPS \"api.meraki.com\" port 443 and no path.\n\n**Account Key:** Meraki User API Key. API Key can be generated from Merkai Dashboard -\u003e User Profile -\u003e API Access.",
          "display_name": "Meraki - Get Organizations",
          "input": {
            "variable_workflow_02LXK9KUOD0MH4qj4j062vm12gYmFb9y5N0": 100,
            "variable_workflow_02LXKBG6HGMSD1YojnHQ3bM2cT6mP8A02A9": "",
            "variable_workflow_02LXKCCX4AREX6odSHkvY5oECunJtqcLahK": ""
          },
          "runtime_user": {
            "target_default": true
          },
          "target": {
            "target_type": "meraki.endpoint",
            "use_workflow_target": true
          },
          "workflow_id": "definition_workflow_02LV5GIDUTY3X0WhuidM5ZWhkjL8wQCGAPq",
          "workflow_name": "Meraki - Get Organizations"
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02OP227HOMRWF3S0Kiz615Tgn0ukaJL3Vb9",
        "name": "JSONPath Query",
        "title": "JSONPath Query",
        "type": "corejava.jsonpathquery",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "description": "JSONPath Query to get value in JSON",
          "display_name": "JSONPath Query",
          "input_json": "$activity.definition_activity_02OP227GKX0PI4CSU4rUY5QxNTXgSMbcTII.output.variable_workflow_02LXKZA6725S35QBWMZCg1AlZnT11mbSFQi$",
          "jsonpath_queries": [
            {
              "jsonpath_query": "[2]['id']",
              "jsonpath_query_name": "orgId",
              "jsonpath_query_type": "string",
              "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02OP227L9KRWT1sIGvkCl8sz0J3t9e1vuVM",
        "name": "Meraki - Get Organization Devices",
        "title": "Meraki - Get Organization Devices",
        "type": "workflow.atomic_workflow",
        "base_type": "subworkflow",
        "properties": {
          "continue_on_failure": false,
          "description": "**Cisco Meraki - Devices - Get Organization Devices**\n\nList the devices in an organization that have been assigned to networks.\n\n**Target:** A Meraki Endpoint using HTTPS \"api.meraki.com\" port 443 and no path.\n\n**Account Key:** Meraki User API Key. API Key can be generated from Merkai Dashboard -\u003e User Profile -\u003e API Access.\n\nSteps:\n[] Sends Get Network request to Meraki\n[] Check if the request was successful:\n[]\u003e If it was, attempt to extract the results and set the output variables\n[]\u003e If it wasn't, return the error and marks the workflow as failed.\n\nNOTE: Empty attributes in the request are removed from the payload before sending to Meraki. \n\nMore information about this API: https://developer.cisco.com/meraki/api-v1/get-organization-networks/",
          "display_name": "Meraki - Get Organization Devices",
          "input": {
            "variable_workflow_02LBZJE84MKWU3b4u5iWvF5C56j3SWvcLxU": "$activity.definition_activity_02OP227HOMRWF3S0Kiz615Tgn0ukaJL3Vb9.output.jsonpath_queries.orgId$",
            "variable_workflow_02LPD34ABGELX4xRBULzEWn7yZXmlOLnhlm": "",
            "variable_workflow_02LPD34ABGWM530L7Ref10RR1lIyS6swy7y": "",
            "variable_workflow_02LPD34ABH4NB5Y3srIX91xn9cIzEY68MMa": "withAnyTags",
            "variable_workflow_02LPD34ABHCES6OHeiXWIvVmRKLdKquVK4f": [],
            "variable_workflow_02LPD34ABHKTT7bzR3DO9wR6Jt8QIVkTmKA": [],
            "variable_workflow_02LPD34ABHUR66qxroFyemfNTX3wjVrx4bB": "",
            "variable_workflow_02LPD34ABI5767Bipcwnil1zhzAhMVqXU77": "",
            "variable_workflow_02LPD34ABICWG2rq68sl7VROvFjqB8bmooh": [],
            "variable_workflow_02LPD34ABIJYH3MHQNXX88Tf38tgg2nnaiV": [],
            "variable_workflow_02LPD34ABIRIY7ksRBfahOf52zARKfji5tq": "",
            "variable_workflow_02LPD34ABIZNM1hpRmCW4fNi50a79mCW4oF": 1000,
            "variable_workflow_02LPD34ABJ73Y1vUpFZq8UjZK37FVXisvfT": "",
            "variable_workflow_02LPD34ABJFEJ26DNauhcFei0QIVgWIgCYw": [],
            "variable_workflow_02LPD34ABJV2C0tJTsG5KJNoU4RZ9yRWNBC": [],
            "variable_workflow_02LPD34ABK6IH5MaynNsHWnm1mpCQw0TkyQ": [],
            "variable_workflow_02LPD34ABKF695YGotxETEugS06mLWBlnVr": [],
            "variable_workflow_02LPD34ABKNYC53bhvdbdyJKVnk3JPbMbDL": ""
          },
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "target_type": "meraki.endpoint",
            "use_workflow_target": true
          },
          "workflow_id": "definition_workflow_02LBZJE7PQZVJ3crE33ELBrscM7zWeiugTw",
          "workflow_name": "Meraki - Get Organization Devices"
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02OP227MKVVX616Gr5X5SXNOSoe54pYbIeq",
        "name": "Read Table from JSON",
        "title": "Read Table from JSON",
        "type": "corejava.read_table_from_json",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "description": "Reading table data from JSON",
          "display_name": "Read Table from JSON",
          "input_json": "$activity.definition_activity_02OP227L9KRWT1sIGvkCl8sz0J3t9e1vuVM.output.variable_workflow_02LBZJE84NB1F75jMCnZjaIsHHmn1NBoO2y$",
          "jsonpath_query": "$",
          "persist_output": true,
          "populate_columns": false,
          "skip_execution": false,
          "table_columns": [
            {
              "column_name": "serial",
              "column_type": "string"
            },
            {
              "column_name": "productType",
              "column_type": "string"
            },
            {
              "column_name": "model",
              "column_type": "string"
            },
            {
              "column_name": "networkId",
              "column_type": "string"
            },
            {
              "column_name": "mac",
              "column_type": "string"
            }
          ]
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02OP227NWP1WY38oRxtaImh2Z2gMdbbsAjE",
        "name": "For Each",
        "title": "For Each",
        "type": "logic.for_each",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "ForEach block",
          "display_name": "For Each",
          "skip_execution": false,
          "source_array": "$activity.definition_activity_02OP227MKVVX616Gr5X5SXNOSoe54pYbIeq.output.read_table_from_json$"
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_02OP227PE9AD00ozRaMhT6Ut2cxsf8r3EWh",
            "name": "Condition Block",
            "title": "Condition Block",
            "type": "logic.if_else",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "description": "If-Else condition block",
              "display_name": "Condition Block",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_02OP227Q6SOID3y531uOxcyJwTfvhWvcAze",
                "name": "Condition Branch",
                "title": "Condition Branch",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$activity.definition_activity_02OP227NWP1WY38oRxtaImh2Z2gMdbbsAjE.input.source_array[@].productType$",
                    "operator": "eq",
                    "right_operand": "wireless"
                  },
                  "continue_on_failure": false,
                  "display_name": "Condition Branch",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02OP227S3QWK10PVQRyM3hrc2NcGVV30CIq",
                    "name": "Meraki - Get Device Lldp Cdp",
                    "title": "Meraki - Get Device Lldp Cdp",
                    "type": "workflow.atomic_workflow",
                    "base_type": "subworkflow",
                    "properties": {
                      "continue_on_failure": false,
                      "description": "List LLDP and CDP information for a device",
                      "display_name": "Meraki - Get Device Lldp Cdp",
                      "input": {
                        "variable_workflow_02OARC9SOCOQW7mrR6CdE4BFQgBSRd0ispP": "$activity.definition_activity_02OP227NWP1WY38oRxtaImh2Z2gMdbbsAjE.input.source_array[@].serial$"
                      },
                      "runtime_user": {
                        "target_default": true
                      },
                      "skip_execution": false,
                      "target": {
                        "target_type": "meraki.endpoint",
                        "use_workflow_target": true
                      },
                      "workflow_id": "definition_workflow_02OARC9SOCK487adxf3WF1CX4b1EgV0XChp",
                      "workflow_name": "Meraki - Get Device Lldp Cdp"
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02OQ1GPAV7GGE0RJdLPv4VdNMhKOzQm0f7G",
                    "name": "JSONPath Query",
                    "title": "Pull Port",
                    "type": "corejava.jsonpathquery",
                    "base_type": "activity",
                    "properties": {
                      "action_timeout": 180,
                      "continue_on_failure": false,
                      "description": "JSONPath Query to get value in JSON",
                      "display_name": "Pull Port",
                      "input_json": "$activity.definition_activity_02OP227S3QWK10PVQRyM3hrc2NcGVV30CIq.output.variable_workflow_02OARC9SOCUX44EaSHpIOJYC4CdvICOBxDI$",
                      "jsonpath_queries": [
                        {
                          "jsonpath_query": "['ports']['wired0']['lldp']['portId']",
                          "jsonpath_query_name": "lldpPort",
                          "jsonpath_query_type": "string",
                          "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                        }
                      ],
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02OQ2BCOJA7701bVc3ZZ2yKef8wH5LAguvq",
                    "name": "JSONPath Query",
                    "title": "Pull ChassisID",
                    "type": "corejava.jsonpathquery",
                    "base_type": "activity",
                    "properties": {
                      "action_timeout": 180,
                      "continue_on_failure": false,
                      "description": "JSONPath Query to get value in JSON",
                      "display_name": "Pull ChassisID",
                      "input_json": "$activity.definition_activity_02OP227S3QWK10PVQRyM3hrc2NcGVV30CIq.output.variable_workflow_02OARC9SOCUX44EaSHpIOJYC4CdvICOBxDI$",
                      "jsonpath_queries": [
                        {
                          "jsonpath_query": "['ports']['wired0']['lldp']['chassisId']",
                          "jsonpath_query_name": "SwitchMac",
                          "jsonpath_query_type": "string"
                        }
                      ],
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02OQ17VDF3NGU13EoSjb4HDwcVxJDKAIkC2",
                    "name": "Add Row to Table",
                    "title": "Add Row to Table",
                    "type": "core.addrowtotable",
                    "base_type": "activity",
                    "properties": {
                      "action_timeout": 180,
                      "continue_on_failure": false,
                      "description": "Add Row to Table",
                      "display_name": "Add Row to Table",
                      "input_table": "$workflow.definition_workflow_02OP227DVBJU72455dp96RDtVkh4RSpD7PU.local.variable_workflow_02OQ1CI3HRZPO3qm4BNyxb832v7EmFFhoz3$",
                      "row": [
                        {
                          "key": "APSerial",
                          "type": "string",
                          "value": "$activity.definition_activity_02OQ1GPAV7GGE0RJdLPv4VdNMhKOzQm0f7G.output.jsonpath_queries.lldpPort$"
                        },
                        {
                          "key": "Switch",
                          "type": "string",
                          "value": "$activity.definition_activity_02OQ2BCOJA7701bVc3ZZ2yKef8wH5LAguvq.output.jsonpath_queries.SwitchMac$"
                        },
                        {
                          "key": "port",
                          "type": "string",
                          "value": "$activity.definition_activity_02OQ1GPAV7GGE0RJdLPv4VdNMhKOzQm0f7G.output.jsonpath_queries.lldpPort$"
                        }
                      ],
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  }
                ]
              },
              {
                "unique_name": "definition_activity_02OP227ZQ3NZ63nwCMaKc1a5QWtOBqlqyom",
                "name": "Condition Branch",
                "title": "Condition Branch",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$activity.definition_activity_02OP227NWP1WY38oRxtaImh2Z2gMdbbsAjE.input.source_array[@].productType$",
                    "operator": "ne",
                    "right_operand": "wireless"
                  },
                  "continue_on_failure": false,
                  "display_name": "Condition Branch",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_02OQ1TFJHB0ZT1lA31ZW69oeq1zPi5b8zni",
        "name": "For Each",
        "title": "Find Switch Serial",
        "type": "logic.for_each",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "ForEach block",
          "display_name": "Find Switch Serial",
          "skip_execution": false,
          "source_array": "$workflow.definition_workflow_02OP227DVBJU72455dp96RDtVkh4RSpD7PU.local.variable_workflow_02OQ1CI3HRZPO3qm4BNyxb832v7EmFFhoz3$"
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_02OQ1U0DA2XKC6vgD1kKh6hFLSDnW0LUGj8",
            "name": "Execute Python Script",
            "title": "get the variables",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": false,
              "description": "Execute Python Script",
              "display_name": "get the variables",
              "script": "switch_mac = \"$activity.definition_activity_02OQ1TFJHB0ZT1lA31ZW69oeq1zPi5b8zni.input.source_array[@].Switch$\"\n\nfor device in $activity.definition_activity_02OP227L9KRWT1sIGvkCl8sz0J3t9e1vuVM.output.variable_workflow_02LBZJE84NB1F75jMCnZjaIsHHmn1NBoO2y$:\n    if device['mac'] == switch_mac:\n        serial = device['serial']\nmyport = $activity.definition_activity_02OQ1TFJHB0ZT1lA31ZW69oeq1zPi5b8zni.input.source_array[@].port$\nmyport_array = []\nmyport_array.append(myport)\n",
              "script_queries": [
                {
                  "script_query": "serial",
                  "script_query_name": "switchSerial",
                  "script_query_type": "string"
                },
                {
                  "script_query": "switch_mac",
                  "script_query_name": "switchMac",
                  "script_query_type": "string"
                },
                {
                  "script_query": "myport",
                  "script_query_name": "switch_port",
                  "script_query_type": "integer"
                },
                {
                  "script_query": "myport_array",
                  "script_query_name": "myport_array",
                  "script_query_type": "array"
                }
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02OQ22F8TL04O3tdHZy2ZVsVD0vZW7mqHoU",
            "name": "Add Row to Table",
            "title": "Add Row to Table",
            "type": "core.addrowtotable",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": false,
              "description": "Add Row to Table",
              "display_name": "Add Row to Table",
              "input_table": "$workflow.definition_workflow_02OP227DVBJU72455dp96RDtVkh4RSpD7PU.local.variable_workflow_02OQ381A32PA36sBlpj8cK20YEDvrja1aRm$",
              "row": [
                {
                  "key": "Serial",
                  "type": "string",
                  "value": "$activity.definition_activity_02OQ1U0DA2XKC6vgD1kKh6hFLSDnW0LUGj8.output.script_queries.switchSerial$"
                },
                {
                  "key": "port",
                  "type": "integer",
                  "value": "$activity.definition_activity_02OQ1U0DA2XKC6vgD1kKh6hFLSDnW0LUGj8.output.script_queries.switch_port$"
                }
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          }
        ]
      },
      {
        "unique_name": "definition_activity_02OQ23MOTZWUD22mPNlo4jzSdKtSvJMoQBJ",
        "name": "For Each",
        "title": "Get Link Speed",
        "type": "logic.for_each",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "description": "ForEach block",
          "display_name": "Get Link Speed",
          "skip_execution": false,
          "source_array": "$workflow.definition_workflow_02OP227DVBJU72455dp96RDtVkh4RSpD7PU.local.variable_workflow_02OQ381A32PA36sBlpj8cK20YEDvrja1aRm$"
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_02OQ2TILHW2D53v35GCyLlhkLIrOG4rjiFI",
            "name": "Meraki - Get Device Switch Ports Statuses",
            "title": "Meraki - Get Device Switch Ports Statuses",
            "type": "workflow.atomic_workflow",
            "base_type": "subworkflow",
            "properties": {
              "continue_on_failure": false,
              "description": "Return the status for all the ports of a switch",
              "display_name": "Meraki - Get Device Switch Ports Statuses",
              "input": {
                "variable_workflow_02OARCA05NMHS7QTiDwv8NCDnI5yvWURows": "$activity.definition_activity_02OQ23MOTZWUD22mPNlo4jzSdKtSvJMoQBJ.input.source_array[@].Serial$"
              },
              "runtime_user": {
                "target_default": true
              },
              "skip_execution": false,
              "target": {
                "target_type": "meraki.endpoint",
                "use_workflow_target": true
              },
              "workflow_id": "definition_workflow_02OARCA05NKY81977Pz6TGns52swn19rbVG",
              "workflow_name": "Meraki - Get Device Switch Ports Statuses"
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02OQ2W384CXFU5MFOtfo0VQgpiJambeH2UL",
            "name": "Execute Python Script",
            "title": "Convert port number to JSON number",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": false,
              "description": "Execute Python Script",
              "display_name": "Convert port number to JSON number",
              "script": "myport = $activity.definition_activity_02OQ23MOTZWUD22mPNlo4jzSdKtSvJMoQBJ.input.source_array[@].port$\njson_port = myport - 1",
              "script_queries": [
                {
                  "script_query": "json_port",
                  "script_query_name": "json_port",
                  "script_query_type": "string"
                }
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02OQ2X88QL1N21QOKDHTQa0RYFC0ezPQLQm",
            "name": "JSONPath Query",
            "title": "Get Speed",
            "type": "corejava.jsonpathquery",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": false,
              "description": "JSONPath Query to get value in JSON",
              "display_name": "Get Speed",
              "input_json": "$activity.definition_activity_02OQ2TILHW2D53v35GCyLlhkLIrOG4rjiFI.output.variable_workflow_02OARCA05NPKW43LsWwICOLqjPhpynjuEyC$",
              "jsonpath_queries": [
                {
                  "jsonpath_query": "[$activity.definition_activity_02OQ2W384CXFU5MFOtfo0VQgpiJambeH2UL.output.script_queries.json_port$]['speed']",
                  "jsonpath_query_name": "port_speed",
                  "jsonpath_query_type": "string",
                  "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                }
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02OQ2Z6GZT92Z0pQROtFCzAZ1ktPZLF8Mqh",
            "name": "Condition Block",
            "title": "Condition Block",
            "type": "logic.if_else",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "description": "If-Else condition block",
              "display_name": "Condition Block",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_02OQ2Z6I5L0NL5LP4UmyFp1OShudQGYMuKq",
                "name": "Condition Branch",
                "title": "Port is 1 Gig",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$activity.definition_activity_02OQ2X88QL1N21QOKDHTQa0RYFC0ezPQLQm.output.jsonpath_queries.port_speed$",
                    "operator": "eq",
                    "right_operand": "1 Gbps"
                  },
                  "continue_on_failure": false,
                  "display_name": "Port is 1 Gig",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02OQ2Z6J2CUV34AiZJcTqDvuNeWtjpGDiFC",
                "name": "Condition Branch",
                "title": "Condition Branch",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": {
                      "left_operand": "$activity.definition_activity_02OQ2X88QL1N21QOKDHTQa0RYFC0ezPQLQm.output.jsonpath_queries.port_speed$",
                      "operator": "eq",
                      "right_operand": "100 Meg"
                    },
                    "operator": "or",
                    "right_operand": {
                      "left_operand": "$activity.definition_activity_02OQ2X88QL1N21QOKDHTQa0RYFC0ezPQLQm.output.jsonpath_queries.port_speed$",
                      "operator": "eq",
                      "right_operand": "10 Meg"
                    }
                  },
                  "continue_on_failure": false,
                  "display_name": "Condition Branch",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02OQ308C0XS5L5yzziCQ7DpTXR4vBNdBIr4",
                    "name": "Copy(1)-Meraki - Create Device Live Tools Cable Test",
                    "title": "Copy(1)-Meraki - Create Device Live Tools Cable Test",
                    "type": "workflow.atomic_workflow",
                    "base_type": "subworkflow",
                    "properties": {
                      "continue_on_failure": false,
                      "description": "Enqueue a job to perform a cable test for the device on the specified ports. This endpoint has a sustained rate limit of one request every five seconds per device, with an allowed burst of five requests.",
                      "display_name": "Copy(1)-Meraki - Create Device Live Tools Cable Test",
                      "input": {
                        "variable_workflow_02ONMITPZESV84WFswyFBQxp0rwhSUhOMAE": "$activity.definition_activity_02OQ23MOTZWUD22mPNlo4jzSdKtSvJMoQBJ.input.source_array[@].Serial$",
                        "variable_workflow_02ONMITPZEZ1L7gBVOgpCgBoueeforaXeOf": "{}",
                        "variable_workflow_02ONMITPZGYT46QKO7oVyZerpcgjWuVTm0Y": false,
                        "variable_workflow_02OQ3OZAEIP2W38rT6fIGD9mSPPbyNRgyFX": "['$activity.definition_activity_02OQ23MOTZWUD22mPNlo4jzSdKtSvJMoQBJ.input.source_array[@].port$']"
                      },
                      "runtime_user": {
                        "target_default": true
                      },
                      "skip_execution": false,
                      "target": {
                        "target_type": "meraki.endpoint",
                        "use_workflow_target": true
                      },
                      "workflow_id": "definition_workflow_02ONMITPH1G1K5e3pAaQHcYWlrG2Yr93aEN",
                      "workflow_name": "Copy(1)-Meraki - Create Device Live Tools Cable Test"
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02OQ3PWRRV7AY2jkJ6KcDTJYVq8VpGd2ijZ",
                    "name": "Sleep",
                    "title": "Sleep",
                    "type": "core.sleep",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "description": "Sleep",
                      "display_name": "Sleep",
                      "skip_execution": false,
                      "sleep_interval": 7
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02OQ3Q2317QXP18W3HeIZnpWNlQoCvXAXFH",
                    "name": "Copy(1)-Meraki - Get Device Live Tools Cable Test",
                    "title": "Copy(1)-Meraki - Get Device Live Tools Cable Test",
                    "type": "workflow.atomic_workflow",
                    "base_type": "subworkflow",
                    "properties": {
                      "continue_on_failure": false,
                      "description": "Return a cable test live tool job.",
                      "display_name": "Copy(1)-Meraki - Get Device Live Tools Cable Test",
                      "input": {
                        "variable_workflow_02ONMCM56RQBX74nBIn5SzvilZJSKzCupwO": "$activity.definition_activity_02OQ23MOTZWUD22mPNlo4jzSdKtSvJMoQBJ.input.source_array[@].Serial$",
                        "variable_workflow_02ONMCM56S4GU1wbUlLXX9eKCGEFPgqz7CG": "$activity.definition_activity_02OQ308C0XS5L5yzziCQ7DpTXR4vBNdBIr4.output.variable_workflow_02ONMITPZFFQV5D1sGEY7tdz3IzxuvQkzg6$"
                      },
                      "runtime_user": {
                        "target_default": true
                      },
                      "skip_execution": false,
                      "target": {
                        "target_type": "meraki.endpoint",
                        "use_workflow_target": true
                      },
                      "workflow_id": "definition_workflow_02ONMCM4NF9350WBQqi4EgcavUpxQZCpjUM",
                      "workflow_name": "Copy(1)-Meraki - Get Device Live Tools Cable Test"
                    },
                    "object_type": "definition_activity"
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "categories": [
      "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
    ]
  },
  "targets": {
    "definition_target_02OASIW2D9EIK0VRpS9VyS2JSKwpbCIVXSW": {
      "unique_name": "definition_target_02OASIW2D9EIK0VRpS9VyS2JSKwpbCIVXSW",
      "name": "Meraki Launchpad",
      "title": "Meraki Launchpad",
      "type": "meraki.endpoint",
      "base_type": "target",
      "object_type": "definition_target",
      "properties": {
        "default_runtime_user_id": "definition_runtime_user_02OASIJ3XPIF05AA5CXjFYZrYeNVCNbjNFV",
        "display_name": "Meraki Launchpad",
        "host": "api.meraki.com",
        "ignore_proxy": false,
        "is_https_proxy": false,
        "port": 443,
        "protocol": "https"
      }
    }
  },
  "runtime_users": {
    "definition_runtime_user_02OASIJ3XPIF05AA5CXjFYZrYeNVCNbjNFV": {
      "unique_name": "definition_runtime_user_02OASIJ3XPIF05AA5CXjFYZrYeNVCNbjNFV",
      "name": "LaunchPad Key",
      "title": "LaunchPad Key",
      "type": "runtime_user.meraki_credentials",
      "base_type": "runtime_user",
      "object_type": "definition_runtime_user",
      "properties": {
        "api_key": "*****",
        "display_name": "LaunchPad Key"
      }
    }
  },
  "table_types": {
    "tabletype_02OQ1CEG7RMP55pJFQGxEVHmIIsGKPEIK72": {
      "unique_name": "tabletype_02OQ1CEG7RMP55pJFQGxEVHmIIsGKPEIK72",
      "data_type": "datatype.tabletype",
      "display_name": "AP Health Check",
      "columns": [
        {
          "name": "Switch",
          "title": "Switch",
          "type": "string"
        },
        {
          "name": "port",
          "title": "port",
          "type": "string"
        },
        {
          "name": "APSerial",
          "title": "APSerial",
          "type": "string"
        }
      ],
      "base_type": "datatype",
      "object_type": "tabletype"
    },
    "tabletype_02OQ225EDDYEA4m6efq2YnFV0XhoiDKL0DU": {
      "unique_name": "tabletype_02OQ225EDDYEA4m6efq2YnFV0XhoiDKL0DU",
      "data_type": "datatype.tabletype",
      "display_name": "Serial Port Table",
      "columns": [
        {
          "name": "Serial",
          "title": "Serial",
          "type": "string"
        },
        {
          "name": "Port",
          "title": "Port",
          "type": "string"
        }
      ],
      "base_type": "datatype",
      "object_type": "tabletype"
    },
    "tabletype_02OQ37X0MS07P4yhLi4GBZWnGtt2Bapsmf7": {
      "unique_name": "tabletype_02OQ37X0MS07P4yhLi4GBZWnGtt2Bapsmf7",
      "data_type": "datatype.tabletype",
      "display_name": "Serial port 2",
      "columns": [
        {
          "name": "Serial",
          "title": "Serial",
          "type": "string"
        },
        {
          "name": "port",
          "title": "port",
          "type": "integer"
        }
      ],
      "base_type": "datatype",
      "object_type": "tabletype"
    }
  },
  "atomic_workflows": [
    "definition_workflow_02LV5GIDUTY3X0WhuidM5ZWhkjL8wQCGAPq",
    "definition_workflow_02LBZJE7PQZVJ3crE33ELBrscM7zWeiugTw",
    "definition_workflow_02OARC9SOCK487adxf3WF1CX4b1EgV0XChp",
    "definition_workflow_02OARCA05NKY81977Pz6TGns52swn19rbVG",
    "definition_workflow_02ONMITPH1G1K5e3pAaQHcYWlrG2Yr93aEN",
    "definition_workflow_02ONMCM4NF9350WBQqi4EgcavUpxQZCpjUM"
  ],
  "dependent_workflows": [
    "definition_workflow_02LV5GIDUTY3X0WhuidM5ZWhkjL8wQCGAPq",
    "definition_workflow_02LBZJE7PQZVJ3crE33ELBrscM7zWeiugTw",
    "definition_workflow_02OARC9SOCK487adxf3WF1CX4b1EgV0XChp",
    "definition_workflow_02OARCA05NKY81977Pz6TGns52swn19rbVG",
    "definition_workflow_02ONMITPH1G1K5e3pAaQHcYWlrG2Yr93aEN",
    "definition_workflow_02ONMCM4NF9350WBQqi4EgcavUpxQZCpjUM"
  ]
}